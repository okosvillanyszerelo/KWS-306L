substitutions:
  slave_addr: "1"
  update_every: "10s"
  kws_id: kws306l
  kws_friendly: "KWS-306L"
  kws_name: "Meter"
  modbus_id: kws_modbus

  # Sensors
  kws_rated_voltage: "Rated Voltage"
  kws_rated_current: "Rated Current"
  kws_measured_voltage: "Measured Voltage"
  kws_measured_current: "Measured Current"
  kws_measured_power: "Measured Power"
  kws_reactive_power: "Reactive Power"
  kws_apparent_power: "Apparent Power"
  kws_measured_pf: "Measured Power Factor"
  kws_measured_freq: "Measured Frequency"
  kws_measured_energy: "Measured Energy"
  kws_measured_temp: "Measured Temperature"
  kws_measured_timer: "Measured Timer Minutes"
  kws_alarm_code: "Alarm Code"
  kws_alarm: "Alarm"

  # Numbers (Limits + Config)
  kws_limit_ov: "Limit Over-Voltage"
  kws_limit_uv: "Limit Under-Voltage"
  kws_limit_oc: "Limit Over-Current"
  kws_limit_op: "Limit Over-Power"
  kws_limit_temp: "Limit Over-Temp"
  kws_limit_energy: "Limit Energy"
  kws_voltage_inbalance: "Voltage inbalance"
  kws_current_inbalance: "Current inbalance"
  kws_set_address: "Set Device Slave Address (⚠ Changing may disconnect)"
  kws_set_backlight_timeout: "Set Backlight Timeout"
  kws_set_backlight_brightness: "Set Backlight Brightness"

  # Switches
  kws_set_relay: "Set Relay"

  # Select
  kws_set_memory: "Set Memory (Relay State After Power Loss)"

modbus_controller:
  - id: ${kws_id}
    address: ${slave_addr}
    modbus_id: ${modbus_id}
    setup_priority: -10
    update_interval: ${update_every}

sensor:
  # Measured Voltage
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_measured_voltage}"
    register_type: holding
    address: 14
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 1
    filters: [ multiply: 0.01 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_measured_voltage}"
    register_type: holding
    address: 15
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 1
    filters: [ multiply: 0.01 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_measured_voltage}"
    register_type: holding
    address: 16
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 1
    filters: [ multiply: 0.01 ]

  # Measured Current
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_measured_current}"
    register_type: holding
    address: 17
    value_type: U_DWORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_measured_current}"
    register_type: holding
    address: 19
    value_type: U_DWORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_measured_current}"
    register_type: holding
    address: 21
    value_type: U_DWORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  # Measured Power
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_power}"
    register_type: holding
    address: 23
    value_type: U_DWORD
    device_class: energy
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_measured_power}"
    register_type: holding
    address: 25
    value_type: U_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_measured_power}"
    register_type: holding
    address: 27
    value_type: U_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_measured_power}"
    register_type: holding
    address: 29
    value_type: U_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  # Apparent Power
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_apparent_power}"
    register_type: holding
    address: 39
    value_type: U_DWORD
    unit_of_measurement: "VA"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_apparent_power}"
    register_type: holding
    address: 41
    value_type: U_DWORD
    unit_of_measurement: "VA"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_apparent_power}"
    register_type: holding
    address: 43
    value_type: U_DWORD
    unit_of_measurement: "VA"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_apparent_power}"
    register_type: holding
    address: 45
    value_type: U_DWORD
    unit_of_measurement: "VA"
    accuracy_decimals: 1
    filters: [ multiply: 0.1 ]

  # Measured Power Factor
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_pf}"
    register_type: holding
    address: 47
    value_type: U_WORD
    unit_of_measurement: ""
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]
    
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_measured_pf}"
    register_type: holding
    address: 48
    value_type: U_WORD
    unit_of_measurement: ""
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_measured_pf}"
    register_type: holding
    address: 49
    value_type: U_WORD
    unit_of_measurement: ""
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_measured_pf}"
    register_type: holding
    address: 50
    value_type: U_WORD
    unit_of_measurement: ""
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  # Measured Frequency
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_freq}"
    register_type: holding
    address: 51
    value_type: U_WORD
    unit_of_measurement: "Hz"
    accuracy_decimals: 2
    filters: [ multiply: 0.01 ]

  # Measured Energy
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_energy}"
    register_type: holding
    address: 52
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P1 ${kws_measured_energy}"
    register_type: holding
    address: 54
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P2 ${kws_measured_energy}"
    register_type: holding
    address: 56
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} P3 ${kws_measured_energy}"
    register_type: holding
    address: 58
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters: [ multiply: 0.001 ]

  # Measured Temperature
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_temp}"
    register_type: holding
    address: 60
    value_type: U_WORD
    unit_of_measurement: "°C"
    accuracy_decimals: 0

  # Measured Timer Minutes
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_measured_timer}"
    register_type: holding
    address: 61
    value_type: U_WORD
    unit_of_measurement: "min"
    accuracy_decimals: 0

  # Alarm code from the device (read-only).
  # 0 = No alarm
  # 1 = Over Voltage Alarm
  # 2 = Under Voltage Alarm
  # 4 = Over Current Alarm
  # 32 = Over Temperature Alarm
  # Any other value = Other alarm
  # This is read only value. Alarms clear automatically when
  # the device is turned on manually, but will remain active
  # when relay is switched on remotely. The display
  # shows no alarm when in ON state.
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    id: ${kws_id}_alarm_code
    name: "${kws_name} ${kws_alarm_code}"
    address: 62
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 0

text_sensor:
  # Description of the Alarm Code (this is optional)
  - platform: template
    name: "${kws_name} ${kws_alarm}"
    lambda: |-
      if (isnan(id(${kws_id}_alarm_code).state)) {
        return {"Waiting..."};
      }

      int code = int(id(${kws_id}_alarm_code).state);
      switch (code) {
        case 0:
          return {"No alarm"};
        case 1:
          return {"Over Voltage"};
        case 2:
          return {"Under Voltage"};
        case 3:
          return {"Over Current"};
        case 4:
          return {"Over Power"};    
        case 6:
          return {"Over Temperature"};
        default:
          char buffer[32];
          snprintf(buffer, sizeof(buffer), "Other (code: %d)", code);
          return {buffer};
      }
#--- WRITABLE DATA -----------------------------------------------------
number:
  # Limit Over-Voltage
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} $kws_limit_ov"
    address: 64
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "V"
    min_value: 130
    max_value: 290
    multiply: 10 # for 250V stored value will be 2500
    step: 1
    mode: box

  # Limit Under-Voltage
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_limit_uv}"
    address: 65
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "V"
    min_value: 85
    max_value: 220
    multiply: 10 # for 220V stored value will be 2200
    step: 1
    mode: box

  # Limit Over-Current
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_limit_oc}"
    address: 66
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "A"
    min_value: 0
    max_value: 40
    step: 0.1
    multiply: 100 # for 40.0A stored value will be 4000
    mode: box

  # Limit Over-Power
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_limit_op}"
    address: 67
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "kW"
    min_value: 0
    max_value: 12
    step: 0.1
    multiply: 100 # for 12.0kW stored value will be 1200
    mode: box

  # Voltage imbalance
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_voltage_inbalance}"
    address: 68
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "V"
    min_value: 0
    max_value: 290
    step: 1
    multiply: 10
    mode: box

  # Current imbalance
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_current_inbalance}"
    address: 69
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "A"
    min_value: 0
    max_value: 99
    step: 1
    multiply: 10
    mode: box
    
  # Limit Over-Temp
  # Sets the over-temperature protection threshold.
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_limit_temp}"
    address: 72
    register_type: holding
    use_write_multiple: True
    value_type: U_WORD
    unit_of_measurement: "°C"
    min_value: 0
    max_value: 150
    step: 1
    mode: box

  # Limit Energy
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_limit_energy}"
    address: 73
    register_type: holding
    use_write_multiple: True
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    min_value: 0.0
    max_value: 9999999
    step: 1
    mode: box
    multiply: 1

  # Set Backlight Timeout
  # This setting defines how long the backlight stays on (in minutes).
  # A value of 0 keeps the backlight on all the time.
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_set_backlight_timeout}"
    address: 71
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "min"
    min_value: 0
    max_value: 59
    step: 1
    mode: box

#switch:
  - platform: modbus_controller
    modbus_controller_id: ${kws_id}
    name: "${kws_name} ${kws_set_relay}"
    address: 63
    register_type: holding 
    value_type: U_WORD
    use_write_multiple: True
    icon: "mdi:toggle-switch"

switch:
  - platform: restart

    name: "Restart"



